# Optimized Production Next.js UI Dockerfile
FROM node:24-alpine AS base

# Install dependencies only when needed
FROM base AS deps
RUN apk add --no-cache libc6-compat
RUN npm i -g pnpm

WORKDIR /app

# Copy package files
COPY package*.json pnpm-lock.yaml* ./

# Mount pnpm cache and install dependencies
RUN --mount=type=cache,target=/root/.local/share/pnpm/store \
    pnpm i --prod --frozen-lockfile

# Rebuild the source code only when needed
FROM base AS builder
RUN npm i -g pnpm
WORKDIR /app

# Copy package files and install all dependencies (dev + prod) for build
COPY package*.json pnpm-lock.yaml* ./
RUN --mount=type=cache,target=/root/.local/share/pnpm/store \
    pnpm i --frozen-lockfile

COPY . .

# Build the application
RUN pnpm run build

# Production image, copy all the files and run next
FROM gcr.io/distroless/nodejs24-debian12 AS runner
WORKDIR /app

ENV NODE_ENV=production
ENV NEXT_TELEMETRY_DISABLED=1

# Copy built application from builder
COPY --from=builder /app/public ./public
COPY --from=builder /app/.next/standalone ./
COPY --from=builder /app/.next/static ./.next/static

EXPOSE 3000

ENV PORT=3000
ENV HOSTNAME="0.0.0.0"

USER 1001

CMD ["server.js"]
